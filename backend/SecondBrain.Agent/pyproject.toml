[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "secondbrain-research-agent"
version = "1.0.0"
description = "Clean, modular research agent for SecondBrain application"
authors = [
    {name = "SecondBrain Team", email = "team@secondbrain.ai"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
keywords = ["ai", "research", "agent", "llm"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Web Framework
    "fastapi>=0.108.0",
    "uvicorn[standard]>=0.25.0",
    
    # Data Validation & Serialization
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # Async HTTP Client
    "httpx>=0.26.0",
    "aiohttp>=3.9.0",
    
    # AI/LLM Providers
    "openai>=1.12.0",
    "anthropic>=0.25.0",
    "google-generativeai>=0.3.0",
    
    # Database & Caching
    "redis>=5.0.0",
    "asyncpg>=0.29.0",
    
    # Dependency Injection
    "dependency-injector>=4.41.0",
    
    # Logging & Monitoring
    "structlog>=23.2.0",
    "python-json-logger>=2.0.7",
    
    # Configuration
    "python-dotenv>=1.0.0",
    
    # Search Libraries
    "duckduckgo-search>=4.1.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "python-dateutil>=2.8.0",
    
    # Utilities
    "python-multipart>=0.0.6",
    "tenacity>=8.2.0",
    "asyncio-throttle>=1.0.2",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.26.0",  # For testing FastAPI
    
    # Code Quality
    "black>=23.12.0",
    "isort>=5.13.0",
    "flake8>=6.1.0",
    "mypy>=1.8.0",
    
    # Security
    "bandit>=1.7.5",
    "safety>=2.3.0",
    
    # Documentation
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
]

production = [
    "gunicorn>=21.2.0",
    "prometheus-client>=0.19.0",
    "sentry-sdk[fastapi]>=1.40.0",
]

[project.urls]
Homepage = "https://github.com/ananyateklu/second-brain"
Repository = "https://github.com/ananyateklu/second-brain"
Documentation = "https://github.com/ananyateklu/second-brain/docs"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
skips = ["B101", "B601"]
exclude_dirs = ["tests"] 